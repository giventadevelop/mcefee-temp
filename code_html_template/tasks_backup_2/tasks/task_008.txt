# Task ID: 8
# Title: Implement ticket type management
# Status: pending
# Dependencies: 4 ⏱️
# Priority: high
# Description: Create admin interface for managing ticket types and prices for events.
# Details:
- Create ticket type form component
- Implement API routes for ticket type CRUD
- Add ticket type list to event form
- Create validation for ticket prices and codes
- Implement admission type selection (free/ticketed)
- Add bulk ticket type operations
From the event details page there should be a buttonor featureto manage the ticket types for the event..  It should have the all the form based administration features where ticket types can be managed with the crud operations.

Implement the API callsand rest API implementations as per the cursor rulesdefined already
.
"/api/ticket-types/{id}": {
      "get": {
        "tags": [
          "ticket-type-resource"
        ],
        "operationId": "getTicketType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketTypeDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ticket-type-resource"
        ],
        "operationId": "updateTicketType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketTypeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketTypeDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ticket-type-resource"
        ],
        "operationId": "deleteTicketType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "ticket-type-resource"
        ],
        "operationId": "partialUpdateTicketType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketTypeDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketTypeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketTypeDTO"
                }
              }
            }
          }
        }
      }
    }

 "/api/ticket-types": {
      "get": {
        "tags": [
          "ticket-type-resource"
        ],
        "operationId": "getAllTicketTypes",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketTypeDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ticket-type-resource"
        ],
        "operationId": "createTicketType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketTypeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketTypeDTO"
                }
              }
            }
          }
        }
      }
    }

    "TicketTypeDTO": {
        "required": [
          "code",
          "createdAt",
          "id",
          "name",
          "price",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "code": {
            "type": "string"
          },
          "availableQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "event": {
            "$ref": "#/components/schemas/EventDTO"
          }
        }
      }

# Test Strategy:
Test creating, updating, and deleting ticket types. Verify validation works correctly.
