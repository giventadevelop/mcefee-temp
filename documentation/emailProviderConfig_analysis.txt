EMAIL PROVIDER CONFIGURATION FIELD ANALYSIS
============================================

Entity: TenantSettings
Field: emailProviderConfig
Current Data Type: TextBlob

WHAT THIS FIELD MEANS:
======================
The emailProviderConfig field stores configuration settings for email service providers
that each tenant organization uses to send emails. This includes:

Common Email Provider Configuration Data:
- SMTP Settings: Server host, port, username, password
- API Keys: SendGrid, Mailgun, AWS SES, etc.
- Authentication: OAuth2 tokens, API credentials
- Domain Verification: SPF, DKIM, DMARC records
- Rate Limiting: Sending limits, quotas
- Webhook URLs: For delivery tracking
- Template IDs: Provider-specific template references

Example Configuration Structure:
{
  "provider": "sendgrid",
  "apiKey": "SG.abc123...",
  "fromEmail": "noreply@tenant.com",
  "fromName": "Tenant Organization",
  "webhookUrl": "https://tenant.com/webhooks/email",
  "templates": {
    "welcome": "d-abc123",
    "confirmation": "d-def456"
  },
  "settings": {
    "trackOpens": true,
    "trackClicks": true
  }
}

IDEAL STRING LENGTH IF CHANGED TO String maxlength():
====================================================

RECOMMENDED: String maxlength(2048) or String maxlength(4096)

Why 2048-4096 characters:
1. JSON Configuration: Email provider configs are typically JSON objects
2. API Keys: Modern API keys can be 100-200 characters
3. Multiple Providers: Some tenants might configure multiple email services
4. Template IDs: Provider template references add length
5. Webhook URLs: Full URLs can be 100-200 characters
6. Future Extensibility: Room for additional configuration options

Alternative: String maxlength(1024) (Conservative)
- Sufficient for basic SMTP + API key configurations
- Good for single-provider setups
- More database storage efficient

FINAL RECOMMENDATION: String maxlength(2048)
============================================
This provides:
✅ Sufficient space for comprehensive email configurations
✅ Room for multiple provider setups
✅ Future extensibility
✅ Reasonable database storage usage
✅ Handles complex JSON configurations

The field would store the email provider configuration as a JSON string, allowing
tenants to configure their email services without needing separate database tables
for each provider's settings.

JDL SYNTAX CHANGE:
==================
Current: emailProviderConfig TextBlob
Recommended: emailProviderConfig String maxlength(2048)

